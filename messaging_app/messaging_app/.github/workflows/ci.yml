name: Django CI Test Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    
    services:
      db: 
        image: mysql/mysql-server:8.0
        env:
          MYSQL_ROOT_PASSWORD: mytestrootpassword
          MYSQL_DATABASE: messaging_db
          MYSQL_USER: messaging_user
          MYSQL_PASSWORD: supersecurepassword_db
        ports:
          - 3306:3306
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install System Dependencies for MySQL Client
      run: |
        sudo apt-get update
        sudo apt-get install -y libmysqlclient-dev netcat

    - name: Install Python Dependencies & Quality Tools
      # ⚠️ ADDED: flake8 and coverage packages
      working-directory: messaging_app
      run: |
        pip3 install -r requirements.txt
        pip3 install flake8 coverage

    # --- ADDED: Flake8 Linting Check ---
    - name: Run Flake8 Lint Check
      working-directory: messaging_app
      run: flake8 --config=.flake8 . 

    - name: Wait for MySQL Service to be ready
      run: |
        echo "Waiting for MySQL service to start on db:3306..."
        while ! nc -z db 3306; do
          sleep 1
        done
        echo "MySQL is up and running!"

    - name: Run Django Tests & Generate Coverage Report
      working-directory: messaging_app
      env:
        MYSQL_DB: messaging_db
        MYSQL_USER: messaging_user
        MYSQL_PASSWORD: supersecurepassword_db
        DB_HOST: db 
        DB_PORT: 3306
        SECRET_KEY: django-insecure-test-key
        DJANGO_SETTINGS_MODULE: messaging_app.settings
      run: |
        # Run tests with coverage and output coverage results to a file
        coverage run --source='.' manage.py test
        coverage report

    # --- ADDED: Upload Coverage Artifacts ---
    - name: Generate Coverage HTML Report
      run: |
        cd messaging_app
        coverage html -d ../htmlcov
    
    - name: Upload Coverage HTML Artifact
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: htmlcov
        retention-days: 5