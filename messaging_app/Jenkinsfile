pipeline {
    agent {
        docker {
            image 'python:3.10-slim'
            args '-u root'
        }
    }

    environment {
        GITHUB_CREDENTIAL_ID = 'github-access-token' 
        TEST_REPORT = 'test_results.xml'
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo "Checking out code..."
                git branch: 'main',
                    credentialsId: env.GITHUB_CREDENTIAL_ID,
                    url: 'https://github.com/fazzy12/alx-backend-python.git'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                echo "Installing dependencies..."
                sh '''
                    pip3 install --no-cache-dir -r messaging_app/requirements.txt
                    pip3 install pytest pytest-junitxml
                '''
            }
        }
        
        stage('Run Tests') {
            steps {
                echo "Running tests..."
                sh "pytest messaging_app/ --junitxml=${env.TEST_REPORT}"
            }
        }
    }
    
    post {
        always {
            echo "Archiving test report: ${env.TEST_REPORT}"
            junit env.TEST_REPORT
        }
        success {
            echo "Pipeline SUCCESS! Tests passed."
        }
        failure {
            echo "Pipeline FAILED! Check test report for details."
        }
    }
}